# Generated by Django 3.1.7 on 2021-03-05 22:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('target_name', models.CharField(max_length=250, verbose_name='Target')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('target_date', models.DateField(blank=True, null=True, verbose_name='Target date')),
                ('distance', models.IntegerField(default=0)),
                ('eta', models.DateField(blank=True, null=True, verbose_name='ETA')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('challenge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='challenges.challenge')),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='challenge',
            name='members',
            field=models.ManyToManyField(related_name='challenges', through='challenges.Membership', to=settings.AUTH_USER_MODEL),
        ),
    ]
